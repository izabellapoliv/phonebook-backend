{"version":3,"sources":["components/Numbers.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","onDelete","name","number","onClick","Numbers","persons","personsList","map","key","id","Filter","filter","onChange","value","PersonForm","onSubmit","newName","onChangeName","newNumber","onChangeNumber","type","Notification","message","className","text","baseUrl","Axios","get","then","response","data","personObject","post","put","delete","Title","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","personService","personsToShow","toLowerCase","includes","showNotification","setTimeout","event","target","preventDefault","personsExist","length","window","confirm","item","catch","error","newPerson","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92a954c4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, onDelete }) => <li>\n  {person.name} | {person.number}\n  &nbsp;<button onClick={() => onDelete(person)}>delete</button>\n</li>\n\nconst Numbers = ({ persons, onDelete }) => {\n  const personsList = persons.map(person =>\n    <Person key={person.id} person={person} onDelete={onDelete} />\n  )\n  return (\n    <ul>{personsList}</ul>\n  )\n}\n\nexport default Numbers\n","import React from 'react'\n\nconst Filter = ({ filter, onChange }) => {\n    return (\n        <div>\n            filter by name:\n        <input value={filter} onChange={onChange} />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ onSubmit, newName, onChangeName, newNumber, onChangeNumber }) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n                name:\n          <input value={newName} onChange={onChangeName} />\n            </div>\n            <div>\n                number:\n          <input value={newNumber} onChange={onChangeNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className={message.className + ' notification'}>\n            {message.text}\n        </div>\n    )\n}\n\nexport default Notification\n","import Axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => Axios\n    .get(baseUrl)\n    .then(response => response.data)\n\nconst create = personObject => Axios\n    .post(baseUrl, personObject)\n    .then(response => response.data)\n\nconst update = (id, personObject) => Axios\n    .put(`${baseUrl}/${id}`, personObject)\n    .then(response => response.data)\n\nconst deletePerson = id => Axios\n    .delete(`${baseUrl}/${id}`)\n    .then(response => response.data)\n\nexport default { getAll, create, update, deletePerson }","import './index.css'\nimport React, { useState, useEffect } from 'react'\nimport Numbers from './components/Numbers'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst Title = ({ text }) => <h2>{text}</h2>\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  )\n\n  const showNotification = (text, className) => {\n    setMessage({ text, className })\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = event => {\n    event.preventDefault()\n    const personsExist = persons.filter(person => person.name === newName)\n    if (personsExist.length > 0) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n        personService\n          .update(personsExist[0].id, { ...personsExist[0], number: newNumber })\n          .then(person => {\n            showNotification(`${person.name}'s info has been updated!`, 'success')\n            setPersons(persons.map(item =>\n              item.id === person.id ? person : item\n            ))\n          })\n          .catch(error => {\n            showNotification(`${personsExist[0].name} has already been deleted from the server.`, 'error')\n            setPersons(persons.filter(item => item.id !== personsExist[0].id))\n          })\n      }\n    } else {\n      const personObj = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(personObj)\n        .then(newPerson => {\n          showNotification(`${newPerson.name} added to the phonebook!`, 'success')\n          setPersons(persons.concat(newPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          console.log(error.response)\n          showNotification(`${error.response.data.error}`, 'error')\n        })\n    }\n  }\n\n  const onChangeFilter = event => setNewFilter(event.target.value)\n  const onChangeName = event => setNewName(event.target.value)\n  const onChangeNumber = event => setNewNumber(event.target.value)\n  const onDelete = person => {\n    if (window.confirm(`Would you like to delete ${person.name} from the phonebook?`)) {\n      personService\n        .deletePerson(person.id)\n        .then(() => {\n          showNotification(`${person.name} deleted from the phonebook!`, 'success')\n          setPersons(persons.filter(item => item.id !== person.id))\n        })\n        .catch(error => {\n          showNotification(`${person.name} has already been deleted from the server.`, 'error')\n          setPersons(persons.filter(item => item.id !== person.id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <Title text='Phonebook' />\n      <Notification message={message} />\n      <Filter filter={filter} onChange={onChangeFilter} />\n      <Title text='Add New' />\n      <PersonForm\n        onSubmit={addPerson}\n        newName={newName}\n        onChangeName={onChangeName}\n        newNumber={newNumber}\n        onChangeNumber={onChangeNumber} />\n      <Title text='Numbers' />\n      <Numbers persons={personsToShow} onDelete={onDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}